// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.15/esri/copyright.txt for details.
//>>built
define("require exports ../../../../../../core/tsSupport/makeTemplateObjectHelper ./NormalAttribute.glsl ./VertexPosition.glsl ../../shaderModules/interfaces".split(" "),function(q,e,b,n,p,d){function f(a,c){0===c.normalType||1===c.normalType?(a.include(n.NormalAttribute,c),a.varyings.add("vNormalWorld","vec3"),a.varyings.add("vNormalView","vec3"),a.vertex.uniforms.add("uTransformNormal_GlobalFromModel","mat3"),a.vertex.uniforms.add("uTransformNormal_ViewFromGlobal","mat3"),a.vertex.code.add(d.glsl(g||
(g=b(["\n      void forwardNormal() {\n        vNormalWorld \x3d uTransformNormal_GlobalFromModel * normalModel();\n        vNormalView \x3d uTransformNormal_ViewFromGlobal * vNormalWorld;\n      }\n    "],["\n      void forwardNormal() {\n        vNormalWorld \x3d uTransformNormal_GlobalFromModel * normalModel();\n        vNormalView \x3d uTransformNormal_ViewFromGlobal * vNormalWorld;\n      }\n    "]))))):2===c.normalType?(a.include(p.VertexPosition,c),a.varyings.add("vNormalWorld","vec3"),a.vertex.code.add(d.glsl(h||
(h=b(["\n    void forwardNormal() {\n      vNormalWorld \x3d ","\n    }\n    "],["\n    void forwardNormal() {\n      vNormalWorld \x3d ","\n    }\n    "])),0===c.viewingMode?d.glsl(k||(k=b(["normalize(vPositionWorldCameraRelative);"],["normalize(vPositionWorldCameraRelative);"]))):d.glsl(l||(l=b(["vec3(0.0, 0.0, 1.0);"],["vec3(0.0, 0.0, 1.0);"])))))):a.vertex.code.add(d.glsl(m||(m=b(["\n      void forwardNormal() {}\n    "],["\n      void forwardNormal() {}\n    "]))))}Object.defineProperty(e,"__esModule",
{value:!0});e.VertexNormal=f;(function(a){a.bindUniforms=function(a,b){a.setUniformMatrix4fv("viewNormal",b.viewInvTransp)}})(f=e.VertexNormal||(e.VertexNormal={}));var g,k,l,h,m});