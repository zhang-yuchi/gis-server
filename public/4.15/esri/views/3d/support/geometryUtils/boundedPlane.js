// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.15/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/compilerUtils ../../../../core/Logger ../../../../core/mathUtils ../../../../core/ObjectStack ../../../../core/libs/gl-matrix-2/mat4 ../../../../core/libs/gl-matrix-2/mat4f64 ../../../../core/libs/gl-matrix-2/vec3 ../../../../core/libs/gl-matrix-2/vec3f64 ../mathUtils ../stack ./lineSegment ./plane ./ray ./vector".split(" "),function(E,f,Q,R,S,w,F,T,e,g,U,h,q,k,V,r){function t(a){void 0===a&&(a=f.UP);return{plane:k.create(a.plane),origin:g.vec3f64.clone(a.origin),
basis1:g.vec3f64.clone(a.basis1),basis2:g.vec3f64.clone(a.basis2)}}function x(a,b){void 0===b&&(b=t());return G(a.origin,a.basis1,a.basis2,b)}function G(a,b,c,d){void 0===d&&(d=t());e.vec3.copy(d.origin,a);e.vec3.copy(d.basis1,b);e.vec3.copy(d.basis2,c);k.fromVectorsAndPoint(c,b,a,d.plane);a=d;1E-6<Math.abs(e.vec3.dot(a.basis1,a.basis2)/(e.vec3.length(a.basis1)*e.vec3.length(a.basis2)))&&y.warn("fromValues()","Provided basis vectors are not perpendicular");1E-6<Math.abs(e.vec3.dot(a.basis1,a.plane))&&
y.warn("fromValues()","Basis vectors and plane normal are not perpendicular");1E-6<Math.abs(-e.vec3.dot(a.plane,a.origin)-a.plane[3])&&y.warn("fromValues()","Plane offset is not consistent with plane origin");return d}function H(a,b,c){a!==c&&x(a,c);a=e.vec3.scale(h.sv3d.get(),a.plane,b);e.vec3.add(c.origin,c.origin,a);c.plane[3]-=b;return c}function I(a,b){void 0===b&&(b=t());var c=(a[2]-a[0])/2,d=(a[3]-a[1])/2;e.vec3.set(b.origin,a[0]+c,a[1]+d,0);e.vec3.set(b.basis1,c,0,0);e.vec3.set(b.basis2,0,
d,0);k.fromValues(0,0,1,0,b.plane);return b}function z(a,b,c){return k.intersectRay(a.plane,b,c)?J(a,c):!1}function K(a,b,c){var d=u.get(),f=u.get();L(a,b,d,f);for(var f=Number.POSITIVE_INFINITY,l=0,g=A;l<g.length;l++){var n=B(a,g[l],v.get()),p=h.sv3d.get();k.intersectLineSegment(d,n,p)&&(n=U.directionFromTo(h.sv3d.get(),b.origin,p),n=Math.abs(S.acosClamped(e.vec3.dot(b.direction,n))),n<f&&(f=n,e.vec3.copy(c,p)))}return f===Number.POSITIVE_INFINITY?M(a,b,c):c}function M(a,b,c){if(z(a,b,c))return c;
var d=u.get(),f=u.get();L(a,b,d,f);for(var l=Number.POSITIVE_INFINITY,g=0,n=A;g<n.length;g++){var p=B(a,n[g],v.get()),m=h.sv3d.get();k.intersectLineSegmentClamp(d,p,m)&&(p=V.distance2(b,m),k.isPointInside(f,m)&&p<l&&(l=p,e.vec3.copy(c,m)))}C(a,b.origin)<l&&N(a,b.origin,c);return c}function N(a,b,c){var d=k.projectPoint(a.plane,b,h.sv3d.get());b=q.projectPointClamp(O(a,a.basis1),d,-1,1,h.sv3d.get());d=q.projectPointClamp(O(a,a.basis2),d,-1,1,h.sv3d.get());e.vec3.subtract(c,e.vec3.add(h.sv3d.get(),
b,d),a.origin);return c}function P(a,b,c){var d=a.origin,f=a.basis1,l=a.basis2;b=e.vec3.subtract(h.sv3d.get(),b,d);f=r.projectPointSignedLength(f,b);l=r.projectPointSignedLength(l,b);a=r.projectPointSignedLength(a.plane,b);return e.vec3.set(c,f,l,a)}function C(a,b){b=P(a,b,h.sv3d.get());var c=a.basis2;a=e.vec3.length(a.basis1);c=e.vec3.length(c);a=Math.max(Math.abs(b[0])-a,0);c=Math.max(Math.abs(b[1])-c,0);b=b[2];return a*a+c*c+b*b}function D(a,b){var c=-a.plane[3];return r.projectPointSignedLength(a.plane,
b)-c}function J(a,b){var c=e.vec3.subtract(h.sv3d.get(),b,a.origin);b=e.vec3.squaredLength(a.basis1);var d=e.vec3.squaredLength(a.basis2),f=e.vec3.dot(a.basis1,c);a=e.vec3.dot(a.basis2,c);return 0>-f-b&&0>f-b&&0>-a-d&&0>a-d}function O(a,b){var c=v.get();e.vec3.copy(c.origin,a.origin);e.vec3.copy(c.vector,b);return c}function B(a,b,c){var d=a.basis1,f=a.basis2;a=a.origin;var l=e.vec3.scale(h.sv3d.get(),d,b.origin[0]),g=e.vec3.scale(h.sv3d.get(),f,b.origin[1]);e.vec3.add(c.origin,l,g);e.vec3.add(c.origin,
c.origin,a);d=e.vec3.scale(h.sv3d.get(),d,b.direction[0]);b=e.vec3.scale(h.sv3d.get(),f,b.direction[1]);e.vec3.scale(c.vector,e.vec3.add(d,d,b),2);return c}function L(a,b,c,d){a=a.plane;k.fromVectorsAndPoint(a,b.direction,b.origin,c);k.fromVectorsAndPoint(c,a,b.origin,d)}Object.defineProperty(f,"__esModule",{value:!0});var y=R.getLogger("esri.views.3d.support.geometryUtils.boundedPlane");E=function(){return function(){this.plane=k.create();this.origin=g.vec3f64.create();this.basis1=g.vec3f64.create();
this.basis2=g.vec3f64.create()}}();f.BoundedPlaneClass=E;f.create=t;f.wrap=function(a,b,c){var d=W.get();d.origin=a;d.basis1=b;d.basis2=c;d.plane=k.fromVectorsAndPoint(c,b,a,k.wrap(0,0,0,0));return d};f.copy=x;f.fromValues=G;f.elevate=H;f.setExtent=function(a,b,c){I(b,c);H(c,D(a,a.origin),c);return c};f.fromAABoundingRect=I;f.intersectRay=z;f.intersectRayClosestSilhouette=function(a,b,c){if(z(a,b,c))return c;a=K(a,b,h.sv3d.get());e.vec3.add(c,b.origin,e.vec3.scale(h.sv3d.get(),b.direction,e.vec3.distance(b.origin,
a)/e.vec3.length(b.direction)));return c};f.closestPointOnSilhouette=K;f.closestPoint=M;f.projectPoint=N;f.projectPointLocal=P;f.distance2=C;f.distance=function(a,b){return Math.sqrt(C(a,b))};f.distanceToSilhouette=function(a,b){for(var c=Number.NEGATIVE_INFINITY,d=0,e=A;d<e.length;d++){var f=B(a,e[d],v.get()),f=q.distance2(f,b);f>c&&(c=f)}return Math.sqrt(c)};f.extrusionContainsPoint=function(a,b){return k.isPointInside(a.plane,b)&&J(a,b)};f.axisAt=function(a,b,c,d){switch(c){case 0:e.vec3.copy(d,
a.basis1);e.vec3.normalize(d,d);break;case 1:e.vec3.copy(d,a.basis2);e.vec3.normalize(d,d);break;case 2:e.vec3.copy(d,a.plane);break;default:Q.neverReached(c)}return d};f.altitudeAt=D;f.setAltitudeAt=function(a,b,c,d){var f=D(a,b);a=e.vec3.scale(X,a.plane,c-f);e.vec3.add(d,b,a);return d};f.transform=function(a,b,c){a!==c&&x(a,c);F.mat4.invert(m,b);F.mat4.transpose(m,m);e.vec3.transformMat4(c.basis1,a.basis1,m);e.vec3.transformMat4(c.basis2,a.basis2,m);e.vec3.transformMat4(c.plane,a.plane,m);e.vec3.transformMat4(c.origin,
a.origin,b);k.setOffsetFromPoint(c.plane,c.origin,c.plane);return c};f.UP={plane:k.create(),origin:g.vec3f64.fromValues(0,0,0),basis1:g.vec3f64.fromValues(1,0,0),basis2:g.vec3f64.fromValues(0,1,0)};var u=new w.ObjectStack(k.create),v=new w.ObjectStack(q.create),X=g.vec3f64.create(),W=new w.ObjectStack(function(){return{origin:null,basis1:null,basis2:null,plane:null}}),A=[{origin:[-1,-1],direction:[1,0]},{origin:[1,-1],direction:[0,1]},{origin:[1,1],direction:[-1,0]},{origin:[-1,1],direction:[0,-1]}],
m=T.mat4f64.create()});